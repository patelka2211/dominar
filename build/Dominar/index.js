/**
 * **Dominar by KP**
 *  
 * Dominar is a powerful library designed to make it easy for developers to manipulate the Document Object Model (DOM) and create dynamic HTML content. Dominar empowers you to take control of your web development projects like a pro. Unleash the power to dominate the DOM with Dominar.
 * 
 * @author Kartavya Patel <patelka2211@gmail.com>
 *
 * @license {@link https://github.com/patelka2211/dominar/blob/main/LICENSE MIT}
 *
 * @copyright Kartavya Patel 2023
 *
 * Last updated at : 2023-05-08T19:51:16.769Z
 */
function newTag(e,t){if(void 0===t)return{[e]:{}};const n={};for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)){const r=t[e];!["string","number"].includes(typeof r)&&!0!==r||void 0===r?"object"==typeof r&&(["children","eventListeners"].includes(e)?n[e]=r:console.warn(`The ${e} attribute has been removed from the tag because its value was an object, only string, number, or true values are allowed for this attribute.`)):n[e]=r}return{[e]:n}}function newTagList(...e){return e}function assignEventListeners(e,t){for(const n in t)if(Object.prototype.hasOwnProperty.call(t,n)){const r=t[n];e.addEventListener(n,r)}}function setAttributes(e,t){if("object"==typeof t&&void 0===t.length)for(const n in t)if(Object.prototype.hasOwnProperty.call(t,n)){setAttribute(e,n,t[n])}}function setAttribute(e,t,n){"string"==typeof n?e.setAttribute(t,n):"number"==typeof n?e.setAttribute(t,String(n)):!0===n&&e.setAttribute(t,"")}var __awaiter=function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function s(e){try{c(r.next(e))}catch(e){o(e)}}function a(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((r=r.apply(e,t||[])).next())}))};function renderTagList(e,t){t.forEach((t=>{"string"==typeof t?e.append(t):e.append(renderSingleTag(t))}))}function renderSingleTag(e){try{let[t,n]=Object.entries(e)[0],r=document.createElement(t);for(const e in n)if(Object.prototype.hasOwnProperty.call(n,e)){const t=n[e];"children"!==e||"object"!=typeof t&&"string"!=typeof t?"eventListeners"===e&&"object"==typeof t&&void 0===t.length?assignEventListeners(r,t):"object"==typeof t?console.warn(`The ${e} attribute is being ignored because it only accepts values of type string, number, or true.`):void 0!==t&&"object"!=typeof t&&setAttribute(r,e,t):"string"==typeof t?r.append(t):void 0===t.length?r.append(renderSingleTag(t)):renderTagList(r,t)}return r}catch(e){return console.error(e),""}}function renderTag(e,t,n={clearBeforeRender:!0,insertType:"append"}){return __awaiter(this,void 0,void 0,(function*(){if(void 0===e)throw Error('Parameter "root" can\'t be null, it must be HTML element.');if(void 0===n.clearBeforeRender&&(n.clearBeforeRender=!0),void 0===n.insertType&&(n.insertType="append"),n.clearBeforeRender&&([e.innerHTML,n.insertType]=["","append"]),"string"==typeof t)e[n.insertType](t);else if(void 0===t.length)e[n.insertType](renderSingleTag(t));else{let r;"prepend"===n.insertType&&([r,e.innerHTML]=[e.innerHTML,""]),renderTagList(e,t),"prepend"===n.insertType&&void 0!==r&&(e.innerHTML+=r)}}))}const extensions={setAttributes:setAttributes,assignEventListeners:assignEventListeners};export{extensions,newTag,newTagList,renderTag};