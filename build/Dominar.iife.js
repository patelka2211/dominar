/**
 * **Dominar by KP**
 *  
 * Dominar is a powerful library designed to make it easy for developers to manipulate the Document Object Model (DOM) and create dynamic HTML content. Dominar empowers you to take control of your web development projects like a pro. Unleash the power to dominate the DOM with Dominar.
 * 
 * @author Kartavya Patel <patelka2211@gmail.com>
 *
 * @license {@link https://github.com/patelka2211/dominar/blob/main/LICENSE MIT}
 *
 * @copyright Kartavya Patel 2023
 *
 * Last updated at : 2023-05-08T19:51:16.769Z
 */
var Dominar=function(e){"use strict";function t(e,t){for(const n in t)if(Object.prototype.hasOwnProperty.call(t,n)){const r=t[n];e.addEventListener(n,r)}}function n(e,t,n){"string"==typeof n?e.setAttribute(t,n):"number"==typeof n?e.setAttribute(t,String(n)):!0===n&&e.setAttribute(t,"")}var r=function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function s(e){try{a(r.next(e))}catch(e){i(e)}}function c(e){try{a(r.throw(e))}catch(e){i(e)}}function a(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,c)}a((r=r.apply(e,t||[])).next())}))};function o(e,t){t.forEach((t=>{"string"==typeof t?e.append(t):e.append(i(t))}))}function i(e){try{let[r,s]=Object.entries(e)[0],c=document.createElement(r);for(const e in s)if(Object.prototype.hasOwnProperty.call(s,e)){const r=s[e];"children"!==e||"object"!=typeof r&&"string"!=typeof r?"eventListeners"===e&&"object"==typeof r&&void 0===r.length?t(c,r):"object"==typeof r?console.warn(`The ${e} attribute is being ignored because it only accepts values of type string, number, or true.`):void 0!==r&&"object"!=typeof r&&n(c,e,r):"string"==typeof r?c.append(r):void 0===r.length?c.append(i(r)):o(c,r)}return c}catch(e){return console.error(e),""}}const s={setAttributes:function(e,t){if("object"==typeof t&&void 0===t.length)for(const r in t)if(Object.prototype.hasOwnProperty.call(t,r)){n(e,r,t[r])}},assignEventListeners:t};return e.extensions=s,e.newTag=function(e,t){if(void 0===t)return{[e]:{}};const n={};for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)){const r=t[e];!["string","number"].includes(typeof r)&&!0!==r||void 0===r?"object"==typeof r&&(["children","eventListeners"].includes(e)?n[e]=r:console.warn(`The ${e} attribute has been removed from the tag because its value was an object, only string, number, or true values are allowed for this attribute.`)):n[e]=r}return{[e]:n}},e.newTagList=function(...e){return e},e.renderTag=function(e,t,n={clearBeforeRender:!0,insertType:"append"}){return r(this,void 0,void 0,(function*(){if(void 0===e)throw Error('Parameter "root" can\'t be null, it must be HTML element.');if(void 0===n.clearBeforeRender&&(n.clearBeforeRender=!0),void 0===n.insertType&&(n.insertType="append"),n.clearBeforeRender&&([e.innerHTML,n.insertType]=["","append"]),"string"==typeof t)e[n.insertType](t);else if(void 0===t.length)e[n.insertType](i(t));else{let r;"prepend"===n.insertType&&([r,e.innerHTML]=[e.innerHTML,""]),o(e,t),"prepend"===n.insertType&&void 0!==r&&(e.innerHTML+=r)}}))},e}({});